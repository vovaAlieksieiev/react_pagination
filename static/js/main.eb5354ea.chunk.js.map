{"version":3,"sources":["components/Pagination/Pagination.tsx","components/ItemLists/ItemsList.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pagesArray","Array","from","length","_value","index","className","classNames","disabled","href","onClick","prevPage","map","pageNo","active","ItemsList","currentItems","item","items","to","numbers","n","push","getNumbers","App","useState","page","setPage","setPerPage","startIndex","endIndex","min","totalItems","slice","id","value","onChange","event","itemsCount","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNAYaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAqBC,KAAKC,KAAKN,EAAQC,GACvCM,EAAaC,MAAMC,KACvB,CAAEC,OAAQN,IACV,SAACO,EAAQC,GAAT,OAAmBA,EAAQ,KAmB7B,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA0B,IAAhBb,IAFd,SAKE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QA5BR,WACsB,IAAhBf,GAIJC,GAAa,SAAAe,GAAQ,OAAIA,EAAW,MAkBhC,oBAWDX,EAAWY,KAAI,SAACC,GAAD,OACd,oBAEEP,UAAWC,IAAW,YAAa,CACjCO,OAAQD,IAAWlB,IAHvB,SAME,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBAAMd,EAAaiB,IAJ9B,SAMGA,KAXEA,MAgBT,oBACEP,UAAWC,IAAW,YAAa,CACjCC,SAAUb,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAAed,IAAgBE,EAC/Ba,QAtDR,WACMf,IAAgBE,GAIpBD,GAAa,SAAAe,GAAQ,OAAIA,EAAW,MA4ChC,wBC3EKI,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACxC,6BACGA,EAAaJ,KAAI,SAAAK,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SCFxBC,ECPC,SAAoBhB,EAAciB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAInB,EAAMmB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDAKG,CAAW,EADN,IAEhBX,KAAI,SAAAS,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAO/B,EAAP,KAAgBkC,EAAhB,KAEMC,GAAcH,EAAO,GAAKhC,EAC1BoC,EAAWhC,KAAKiC,IAAIF,EAAanC,EAAU,EAAGsC,IAC9ChB,EAAeE,EAAMe,MAAMJ,EAAYC,EAAW,GAOxD,OAEE,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWoB,EADX,mBAC0BG,EAAa,EADvC,cAC8CC,EAAW,EADzD,eAtBa,GAsBb,OAIA,sBAAKxB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR4B,GAAG,kBACH5B,UAAU,eACV6B,MAAOzC,EACP0C,SAAU,SAAAC,GAAK,OArBGC,GAqBqBD,EAAME,OAAOJ,MApB5DP,EAAWU,QACXX,EAAQ,GAFV,IAA4BW,GAgBpB,UAOE,wBAAQH,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOK,QAAQ,kBAAkBlC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAhDW,GAiDXC,QAASA,EACTC,YAAa+B,EACb9B,aAAc+B,IAGhB,cAAC,EAAD,CAAWX,aAAcA,QEzD/ByB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.eb5354ea.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Callback = (page: number) => number;\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number | Callback) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages: number = Math.ceil(total / perPage);\n  const pagesArray = Array.from(\n    { length: totalPages },\n    (_value, index) => index + 1,\n  );\n\n  function moveToPreviousPage() {\n    if (currentPage === 1) {\n      return;\n    }\n\n    onPageChange(prevPage => prevPage - 1);\n  }\n\n  function moveToNextPage() {\n    if (currentPage === totalPages) {\n      return;\n    }\n\n    onPageChange(prevPage => prevPage + 1);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={moveToPreviousPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pagesArray.map((pageNo: number) => (\n        <li\n          key={pageNo}\n          className={classNames('page-item', {\n            active: pageNo === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNo}`}\n            onClick={() => onPageChange(pageNo)}\n          >\n            {pageNo}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === totalPages,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={moveToNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  currentItems: string[],\n};\n\nexport const ItemsList: React.FC<Props> = ({ currentItems }) => (\n  <ul>\n    {currentItems.map(item => (\n      <li data-cy=\"item\" key={item}>\n        {item}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { ItemsList } from './components/ItemLists';\n\nconst totalItems = 42;\nconst items = getNumbers(1, totalItems)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const startIndex = (page - 1) * perPage;\n  const endIndex = Math.min(startIndex + perPage - 1, totalItems - 1);\n  const currentItems = items.slice(startIndex, endIndex + 1);\n\n  function hadlePerPageChange(itemsCount: number) {\n    setPerPage(itemsCount);\n    setPage(1);\n  }\n\n  return (\n\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${startIndex + 1} - ${endIndex + 1} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => hadlePerPageChange(+event.target.value)}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={setPage}\n      />\n\n      <ItemsList currentItems={currentItems} />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}